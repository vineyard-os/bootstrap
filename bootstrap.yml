# parts of this file were shamelessly stolen from bootstrap-managarm
# managarm is governed by the MIT license
# see https://github.com/managarm/bootstrap-managarm/blob/master/bootstrap.yml for the original

directories:
  system_root: 'hdd'
  tool_builds: 'builds/tool/'
  pkg_builds: 'builds/package/'

imports:
- file: 'vineyard.yml'

sources:
- name: binutils
  subdir: 'tools'
  git: 'git://sourceware.org/git/binutils-gdb.git'
  tag: 'binutils-2_32'
  tools_required:
    - host-autoconf-v2.69
    - host-automake-v1.15
  regenerate:
    - args: ['autoreconf']
      workdir: '@THIS_SOURCE_DIR@/ld'

- name: gcc
  subdir: 'tools'
  git: 'git://gcc.gnu.org/git/gcc.git'
  tag: 'gcc-9_1_0-release'
  tools_required:
  - host-autoconf-v2.69
  - host-automake-v1.11
  regenerate:
  - args: ['./contrib/download_prerequisites']
    workdir: '@THIS_SOURCE_DIR@'
  - args: ['autoconf']
    workdir: '@THIS_SOURCE_DIR@/gcc'
  - args: ['autoconf']
    workdir: '@THIS_SOURCE_DIR@/libstdc++-v3'

tools:
- name: ovmf
  source:
    subdir: 'third-party'
    url: 'https://dl.bintray.com/no92/vineyard-binary/OVMF.fd'
    format: 'raw'
    filename: 'OVMF.fd'

- name: host-autoconf-v2.64
  source:
    name: autoconf-v2.64
    subdir: 'tools'
    url: 'https://ftp.gnu.org/gnu/autoconf/autoconf-2.64.tar.xz'
    format: 'tar.xz'
    extract_path: 'autoconf-2.64'
  configure:
    # Despite its efforts to be POSIX-compatible, autoconf 2.64 fails to configure on dash
    # (as it assumes that echo does not evaluate backslash escapes).
    # It *also* fails when setting CONFIG_SHELL to /bin/bash.
    # The manual (in section "Defining Variables") mentions this bug and the following
    # workaround: We set *both* CONFIG_SHELL *and* execute the script using /bin/bash.
    - args: ['/bin/bash', '@THIS_SOURCE_DIR@/configure', '--prefix=@PREFIX@']
  environ:
    'CONFIG_SHELL': '/bin/bash'
  compile:
    - args: ['make', '-j@PARALLELISM@']
  install:
    - args: ['make', 'install']

- name: host-autoconf-v2.69
  source:
    name: autoconf-v2.69
    subdir: 'tools'
    url: 'https://ftp.gnu.org/gnu/autoconf/autoconf-2.69.tar.xz'
    format: 'tar.xz'
    extract_path: 'autoconf-2.69'
  configure:
    - args: ['@THIS_SOURCE_DIR@/configure', '--prefix=@PREFIX@']
  compile:
    - args: ['make', '-j@PARALLELISM@']
  install:
    - args: ['make', 'install']

- name: cross-binutils
  from_source: binutils
  configure:
    - args:
      - '@THIS_SOURCE_DIR@/configure'
      - '--prefix=@PREFIX@'
      - '--target=x86_64-vineyard'
      - '--with-sysroot=@SYSROOT_DIR@'
      # On recent compilers, binutils 2.26 causes implicit-fallthrough warnings, among others.
      - '--disable-werror'
      # -g blows up the binary size.
      - 'CFLAGS=-O2'
  compile:
    - args: ['make', '-j@PARALLELISM@', 'all-binutils', 'all-gas', 'all-ld']
  install:
    - args: ['make', 'install-binutils', 'install-gas', 'install-ld']
    - args: |
        for f in @PREFIX@/bin/x86_64-vineyard-*; do
          tf=$(basename $f | sed 's/x86_64-vineyard/x86_64-vineyard-kernel/')
          ln -sf $(basename $f) @PREFIX@/bin/$tf
        done

- name: host-automake-v1.11
  source:
    name: automake-v1.11
    subdir: 'tools'
    git: 'https://git.savannah.gnu.org/r/automake.git'
    tag: 'v1.11.6'
    tools_required:
    - host-autoconf-v2.69
    regenerate:
      - args: ['./bootstrap']
  tools_required:
    - host-autoconf-v2.69
  configure:
    - args:
      - '@THIS_SOURCE_DIR@/configure'
      - '--prefix=@PREFIX@'
      - 'MAKEINFO=/bin/true'
  compile:
    - args: ['make', '-j@PARALLELISM@']
  install:
    - args: ['make', 'install']
    # Stop aclocal from complaining.
    - args: ['ln', '-sf', '@PREFIX@/share/aclocal-1.11', '@PREFIX@/share/aclocal']

- name: host-automake-v1.15
  source:
      name: automake-v1.15
      subdir: 'tools'
      git: 'http://git.savannah.gnu.org/r/automake.git'
      tag: 'v1.15.1'
      tools_required:
        - host-autoconf-v2.69
      regenerate:
        - args: ['./bootstrap']
  tools_required:
    - host-autoconf-v2.69
  configure:
    - args:
      - '@THIS_SOURCE_DIR@/configure'
      - '--prefix=@PREFIX@'
      - 'MAKEINFO=/bin/true'
  compile:
    - args: ['make', '-j@PARALLELISM@']
  install:
    - args: ['make', 'install']
    # Stop aclocal from complaining.
    - args: ['ln', '-sf', '@PREFIX@/share/aclocal-1.15', '@PREFIX@/share/aclocal']

- name: kernel-gcc
  from_source: gcc
  tools_required:
  - tool: cross-binutils
    recursive: true
  configure:
  - args:
    - '@THIS_SOURCE_DIR@/configure'
    - '--prefix=@PREFIX@'
    - '--target=x86_64-vineyard'
    - '--with-sysroot=@BUILD_ROOT@/hdd'
    - '--enable-languages=c'
    - '--disable-nls'
    # -g blows up GCC's binary size.
    - 'CFLAGS=-O2'
    - 'CXXFLAGS=-O2'
  stages:
  - name: compiler
    compile:
      # Copy rudimentary header files into the kernel sysroot.
      - args: |
          mkdir -p @BUILD_ROOT@/hdd/usr/include
      # Set inhibit_libc to prevent libgcov build.
      # This is also required to correctly build the target libraries later.
      - args: ['make', '-j@PARALLELISM@', 'inhibit_libc=true', 'all-gcc']
    install:
      - args: ['make', 'install-gcc']
  - name: libgcc
    tools_required:
      - tool: kernel-gcc
        stage_dependencies: [compiler]
    compile:
      - args: |
          make inhibit_libc=true CFLAGS_FOR_TARGET='-g -O2 -mcmodel=kernel -mno-red-zone' all-target-libgcc || true
        quiet: true
      - args: |
          sed -i 's/PICFLAG/DISABLED_PICFLAG/g' x86_64-vineyard/libgcc/Makefile
          sed -i 's/PICFLAG/DISABLED_PICFLAG/g' x86_64-vineyard/no-red-zone/libgcc/Makefile
          make inhibit_libc=true CFLAGS_FOR_TARGET='-g -O2 -mcmodel=kernel -mno-red-zone' all-target-libgcc
    install:
      - args: ['make', 'install-target-libgcc']

packages:
- name: efifs
  source:
    subdir: 'third-party'
    url: 'https://efi.akeo.ie/downloads/efifs-latest/x64/btrfs_x64.efi'
    format: 'raw'
    filename: 'btrfs.efi'
  regenerate:
  - args: ['cp', '@THIS_SOURCE_DIR@/btrfs.efi', '@SOURCE_ROOT@/boot/btrfs.efi']
